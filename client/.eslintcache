[{"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\index.tsx":"1","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\App.tsx":"3","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\auth.ts":"4","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\FireLogo.tsx":"5","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\users.ts":"6","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\BottomNavBar.tsx":"7","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\HistoryPage.tsx":"8","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\LibraryChip.tsx":"9","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\plex.ts":"10","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\HomePage.tsx":"11","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\LoginPage.tsx":"12","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\UserSelectionPage.tsx":"13","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\slices\\userSlice.ts":"14","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\store.ts":"15","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\utils.ts":"16","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\fetcher.ts":"17","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\slices\\plexSlice.ts":"18"},{"size":604,"mtime":1608320021434,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2277,"mtime":1608313774853,"results":"22","hashOfConfig":"20"},{"size":3945,"mtime":1608320259328,"results":"23","hashOfConfig":"20"},{"size":757,"mtime":1608261953908,"results":"24","hashOfConfig":"20"},{"size":380,"mtime":1608328857963,"results":"25","hashOfConfig":"20"},{"size":1021,"mtime":1608261901629,"results":"26","hashOfConfig":"20"},{"size":138,"mtime":1608312085149,"results":"27","hashOfConfig":"20"},{"size":698,"mtime":1608261985076,"results":"28","hashOfConfig":"20"},{"size":248,"mtime":1608334520713,"results":"29","hashOfConfig":"20"},{"size":3094,"mtime":1608339720712,"results":"30","hashOfConfig":"20"},{"size":2695,"mtime":1608322469118,"results":"31","hashOfConfig":"20"},{"size":3385,"mtime":1608313787297,"results":"32","hashOfConfig":"20"},{"size":2448,"mtime":1608349611817,"results":"33","hashOfConfig":"20"},{"size":516,"mtime":1608349613501,"results":"34","hashOfConfig":"20"},{"size":759,"mtime":1608321464126,"results":"35","hashOfConfig":"20"},{"size":550,"mtime":1608334941670,"results":"36","hashOfConfig":"20"},{"size":1254,"mtime":1608339090035,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1uxogpg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\index.tsx",[],["77","78"],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\App.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\auth.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\FireLogo.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\users.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\BottomNavBar.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\HistoryPage.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\components\\LibraryChip.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\plex.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\HomePage.tsx",["79","80","81","82","83"],"import {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LibraryChip } from \"../components/LibraryChip\";\r\nimport { getLibraries } from \"../services/plex\";\r\nimport { getServers, selectServer, Server } from \"../store/slices/plexSlice\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\nconst useStyles = makeStyles({\r\n  heading: {\r\n    padding: \"1em\",\r\n    paddingBottom: \"0em\",\r\n  },\r\n  container: {\r\n    padding: \"1em\",\r\n  },\r\n  buttonContainer: {\r\n    position: \"absolute\",\r\n    bottom: \"8em\",\r\n  },\r\n  plexButton: {\r\n    padding: \"1em 6em\",\r\n  },\r\n});\r\n\r\nconst HomePage: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [libraries, setLibraries] = useState<string[]>([]);\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const selectedServer = useSelector(\r\n    (state: RootState) => state.plex?.selectedServer\r\n  );\r\n  const serverOptions = useSelector(\r\n    (state: RootState) => state.plex?.serverOptions\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getServers());\r\n  }, []);\r\n\r\n  const handleServerSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event);\r\n    dispatch(selectServer(event.target.value as string));\r\n    // getLibraries().then((res) => setLibraries(res));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        className={classes.container}\r\n      >\r\n        <FormControl variant=\"filled\" style={{ width: \"100%\" }}>\r\n          <InputLabel id=\"server-select\">Server</InputLabel>\r\n          <Select\r\n            labelId=\"server-select\"\r\n            id=\"server-select\"\r\n            // value={selectedServer?.id}\r\n            // onChange={handleServerSelect}\r\n          >\r\n            {serverOptions &&\r\n              serverOptions?.map((server) => {\r\n                return (\r\n                  <MenuItem key={server.id} value={server.id}>\r\n                    {server.name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      {selectedServer && (\r\n        <>\r\n          <Typography className={classes.heading} variant=\"h6\">\r\n            Libraries\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            direction=\"row\"\r\n            className={classes.container}\r\n          >\r\n            {libraries.map((lib) => {\r\n              return <LibraryChip key={lib} label={lib} />;\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.buttonContainer}\r\n      >\r\n        <Button\r\n          className={classes.plexButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Start Swiping\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\LoginPage.tsx",["84"],"import { Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  authLinkSelector,\r\n  checkTokenValidity,\r\n  fetchPins,\r\n  tokenToPin,\r\n} from \"../store/slices/userSlice\";\r\nimport { AppDispatch, RootState } from \"../store/store\";\r\n\r\n// A custom hook that builds on useLocation to parse\r\n// the query string for you.\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: \"2em\",\r\n  },\r\n  plexButton: {\r\n    marginTop: \"2em\",\r\n    padding: \"1em\",\r\n  },\r\n});\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const query = useQuery();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector((state: RootState) => state.user);\r\n  const authLink = useSelector(authLinkSelector);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  //1) Choose a unique app name, like “My Cool Plex App”\r\n  //2) Check storage for your app’s Client Identifier; generate and store one if none is present.\r\n  //3) Check storage for the user’s Access Token; if present, verify its validity and carry on.\r\n  //4) If an Access Token is missing or invalid, generate a PIN, and store its id.\r\n  //5) Construct an Auth App url and send the user’s browser there to authenticate.\r\n  //6) After authentication, check the PIN’s id to obtain and store the user’s Access Token.\r\n  useEffect(() => {\r\n    // User logged in. Get their access token.\r\n    if (query.has(\"postback\")) {\r\n      dispatch(tokenToPin());\r\n      history.push(\"/home\");\r\n      return;\r\n    }\r\n\r\n    if (user.accessToken) {\r\n      dispatch(checkTokenValidity()).then(async (result) => {\r\n        if (checkTokenValidity.fulfilled.match(result)) {\r\n          const isValid = result.payload;\r\n          if (isValid) {\r\n            history.push(\"/home\");\r\n            return;\r\n          }\r\n          dispatch(fetchPins());\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(fetchPins());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <Typography variant=\"h1\" className={classes.title}>\r\n        Burning for Plex\r\n      </Typography>\r\n      <Button\r\n        href={authLink ?? \"\"}\r\n        className={classes.plexButton}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={authLink === null}\r\n      >\r\n        Log In with Plex Account\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\pages\\UserSelectionPage.tsx",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\slices\\userSlice.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\store.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\utils.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\services\\fetcher.ts",[],"C:\\Users\\evanb\\Desktop\\evan-buss\\burning\\client\\src\\store\\slices\\plexSlice.ts",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":14,"column":10,"nodeType":"91","messageId":"92","endLine":14,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":15,"column":36,"nodeType":"91","messageId":"92","endLine":15,"endColumn":42},{"ruleId":"89","severity":1,"message":"94","line":37,"column":21,"nodeType":"91","messageId":"92","endLine":37,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":49,"column":6,"nodeType":"97","endLine":49,"endColumn":8,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":51,"column":9,"nodeType":"91","messageId":"92","endLine":51,"endColumn":27},{"ruleId":"95","severity":1,"message":"100","line":64,"column":6,"nodeType":"97","endLine":64,"endColumn":8,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'getLibraries' is defined but never used.","Identifier","unusedVar","'Server' is defined but never used.","'setLibraries' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'handleServerSelect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'query', and 'user.accessToken'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},"Update the dependencies array to be: [dispatch, history, query, user.accessToken]",{"range":"112","text":"113"},[1206,1208],"[dispatch]",[2119,2121],"[dispatch, history, query, user.accessToken]"]